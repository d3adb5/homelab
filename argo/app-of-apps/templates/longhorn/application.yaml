apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: longhorn
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: longhorn

  sources:
    - repoURL: {{ .Values.repository.url }}
      targetRevision: {{ .Values.repository.targetRevision }}
      path: argo/longhorn

    - repoURL: https://oauth2-proxy.github.io/manifests
      targetRevision: 8.1.1
      chart: oauth2-proxy

      helm:
        valuesObject:
          config:
            existingSecret: longhorn-oidc-secrets
            oidcIssuerUrl: "https://id.d3adb5.ca/realms/core"
            redirectUrl: "https://longhorn.d3adb5.ca/oauth2/callback"
            proxyPrefix: "/oauth2"

          ingress:
            enabled: true
            className: nginx
            annotations:
              cert-manager.io/cluster-issuer: letsencrypt
            hosts:
              - "longhorn.d3adb5.ca"
            path: /oauth2
            tls:
              - hosts:
                  - "longhorn.d3adb5.ca"
                secretName: longhorn-ui-tls

    - repoURL: https://charts.longhorn.io
      targetRevision: 1.7.0
      chart: longhorn

      helm:
        valuesObject:
          preUpgradeChecker:
            jobEnabled: false
          persistence:
            defaultClassReplicaCount: 3
            migratable: true
          ingress:
            enabled: true
            ingressClassName: nginx
            host: longhorn.d3adb5.ca
            tls: true
            tlsSecret: longhorn-ui-tls
            annotations:
              cert-manager.io/cluster-issuer: letsencrypt
              nginx.ingress.kubernetes.io/auth-response-headers: Authorization
              nginx.ingress.kubernetes.io/auth-signin: https://$host/oauth2/start?rd=$escaped_request_uri
              nginx.ingress.kubernetes.io/auth-url: https://$host/oauth2/auth
              nginx.ingress.kubernetes.io/configuration-snippet: |
                auth_request_set $name_upstream_1 $upstream_cookie_name_1;

                access_by_lua_block {
                  if ngx.var.name_upstream_1 ~= "" then
                    ngx.header["Set-Cookie"] = "name_1=" .. ngx.var.name_upstream_1 .. ngx.var.auth_cookie:match("(; .*)")
                  end
                }
          networkPolicies:
            enabled: true

  destination:
    namespace: {{ .Values.longhorn.namespace }}
    server: https://kubernetes.default.svc

  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
