apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: argocd

  source:
    repoURL: https://argoproj.github.io/argo-helm
    chart: argo-cd
    targetRevision: 8.3.0

    helm:
      valuesObject:
        global:
          domain: argocd.d3adb5.ca
          networkPolicy:
            create: true
            defaultDenyIngress: true

        configs:
          params:
            server.insecure: true
          cm:
            oidc.config: |
              name: Keycloak
              issuer: https://id.d3adb5.ca/realms/core
              clientID: argocd
              clientSecret: $oidc.keycloak.clientSecret
              requestedScopes: ["openid", "profile", "email", "groups"]
          rbac:
            policy.csv: |
              g, /Admin,   role:admin
              g, /Argo CD, role:readonly

        controller:
          replicas: 1

        redis-ha:
          enabled: true
          networkPolicy:
            enabled: true
          haproxy:
            networkPolicy:
              enabled: true

        server:
          autoscaling:
            enabled: true
            minReplicas: 2
          ingress:
            enabled: true
            ingressClassName: nginx
            annotations:
              nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
              nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
              cert-manager.io/cluster-issuer: "letsencrypt"
            tls: true

        repoServer:
          autoscaling:
            enabled: true
            minReplicas: 2

        applicationSet:
          replicas: 2

  destination:
    server: https://kubernetes.default.svc
    namespace: {{ .Values.argocd.namespace }}

  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
